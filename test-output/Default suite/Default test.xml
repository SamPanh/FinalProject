<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="trung" failures="1" tests="21" name="Default test" time="2.545" errors="0" timestamp="2023-08-23T02:12:50 ICT">
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="2.166">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.97 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: &amp;apos;TRUNG&amp;apos;, ip: &amp;apos;192.168.2.41&amp;apos;
Build info: version: &amp;apos;4.9.1&amp;apos;, revision: &amp;apos;eb2032df7f&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.8&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.97 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'TRUNG', ip: '192.168.2.41'
Build info: version: '4.9.1', revision: 'eb2032df7f'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:52)
at core.BaseTest.setUp(BaseTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="core.BaseTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="core.BaseTest" name="@AfterMethod checkAfterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod checkAfterMethod -->
  <testcase classname="test.TestCases" name="tc_01" time="0.0">
    <skipped/>
  </testcase> <!-- tc_01 -->
  <testcase classname="test.TestCases" name="tc_02" time="0.0">
    <failure type="org.testng.TestNGException" message="
Data Provider public static java.lang.Object[][] test.TestCases.getAccount() throws java.lang.Exception returned a null value">
      <![CDATA[org.testng.TestNGException: 
Data Provider public static java.lang.Object[][] test.TestCases.getAccount() throws java.lang.Exception returned a null value
at org.testng.internal.invokers.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:159)
at org.testng.internal.Parameters.handleParameters(Parameters.java:803)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:911)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- tc_02 -->
  <testcase classname="test.TestCases" name="tc_03" time="0.0">
    <skipped/>
  </testcase> <!-- tc_03 -->
  <testcase classname="test.TestCases" name="tc_04" time="0.0">
    <skipped/>
  </testcase> <!-- tc_04 -->
  <testcase classname="test.TestCases" name="tc_05" time="0.0">
    <skipped/>
  </testcase> <!-- tc_05 -->
  <testcase classname="test.TestCases" name="tc_06" time="0.0">
    <skipped/>
  </testcase> <!-- tc_06 -->
  <testcase classname="test.TestCases" name="tc_07" time="0.0">
    <skipped/>
  </testcase> <!-- tc_07 -->
  <testcase classname="test.TestCases" name="tc_08" time="0.0">
    <skipped/>
  </testcase> <!-- tc_08 -->
  <testcase classname="test.TestCases" name="tc_09" time="0.0">
    <skipped/>
  </testcase> <!-- tc_09 -->
  <testcase classname="test.TestCases" name="tc_10" time="0.0">
    <skipped/>
  </testcase> <!-- tc_10 -->
  <testcase classname="test.TestCases" name="tc_11" time="0.001">
    <skipped/>
  </testcase> <!-- tc_11 -->
  <testcase classname="test.TestCases" name="tc_12" time="0.0">
    <skipped/>
  </testcase> <!-- tc_12 -->
  <testcase classname="test.TestCases" name="tc_13" time="0.0">
    <skipped/>
  </testcase> <!-- tc_13 -->
  <testcase classname="test.TestCases" name="tc_14" time="0.0">
    <skipped/>
  </testcase> <!-- tc_14 -->
  <testcase classname="test.TestCases" name="tc_15" time="0.0">
    <skipped/>
  </testcase> <!-- tc_15 -->
  <testcase classname="test.TestCases" name="tc_16" time="0.0">
    <skipped/>
  </testcase> <!-- tc_16 -->
  <testcase classname="test.TestCases" name="tc_17" time="0.0">
    <skipped/>
  </testcase> <!-- tc_17 -->
  <testcase classname="test.TestCases" name="tc_18" time="0.0">
    <skipped/>
  </testcase> <!-- tc_18 -->
  <testcase classname="test.TestCases" name="tc_19" time="0.0">
    <skipped/>
  </testcase> <!-- tc_19 -->
  <testcase classname="test.TestCases" name="tc_20" time="0.0">
    <skipped/>
  </testcase> <!-- tc_20 -->
  <testcase classname="test.TestCases" name="tc_21" time="0.0">
    <skipped/>
  </testcase> <!-- tc_21 -->
</testsuite> <!-- Default test -->
